version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    container_name: happy-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-happy_server}
      POSTGRES_USER: ${POSTGRES_USER:-happy}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-happy}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - happy-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: happy-redis
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - happy-network
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: happy-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - minio_data:/data
    ports:
      - "${MINIO_API_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - happy-network
    restart: unless-stopped

  happy-server:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: happy-server
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3000}
      DATABASE_URL: postgresql://${POSTGRES_USER:-happy}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-happy_server}
      REDIS_URL: redis://redis:6379
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: ${MINIO_ROOT_USER:-minioadmin}
      S3_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-minioadmin}
      S3_BUCKET: ${S3_BUCKET:-happy}
      S3_PUBLIC_URL: ${S3_PUBLIC_URL:-http://localhost:9000/happy}
      HANDY_MASTER_SECRET: ${HANDY_MASTER_SECRET:-your-super-secret-key}
      METRICS_ENABLED: ${METRICS_ENABLED:-true}
      METRICS_PORT: ${METRICS_PORT:-9090}
      DANGEROUSLY_LOG_TO_SERVER_FOR_AI_AUTO_DEBUGGING: ${DANGEROUSLY_LOG_TO_SERVER_FOR_AI_AUTO_DEBUGGING:-false}
    ports:
      - "${PORT:-3000}:3000"
      - "${METRICS_PORT:-9090}:9090"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - happy-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: happy-nginx
    depends_on:
      - happy-server
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    networks:
      - happy-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  happy-network:
    driver: bridge
